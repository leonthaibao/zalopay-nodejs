openapi: 3.0.1
info:
  title: Swagger ZaloPay OpenApi
  description: >-
    ZaloPay OpenApi interface for merchant onboarding, more information can be
    found at [https://docs.zalopay.vn](https://docs.zalopay.vn)
  termsOfService: http://swagger.io/terms/
  contact:
    email: developer@zalopay.vn
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about ZaloPay
  url: https://docs.zalopay.vn
servers:
  - url: https://sb-openapi.zalopay.vn
tags:
  - name: order
    description: Payment Orders
    x-displayName: Order
  - name: refund
    description: Refund a transaction
    x-displayName: Refund
  - name: tokenization
    description: Tokenization
    x-displayName: Tokenization
paths:
  /v2/create:
    post:
      tags:
        - order
      summary: Create a new order
      operationId: OrderCreate
      requestBody:
        description: Order request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCreateResponse"
          description: OK
  /v2/query:
    post:
      tags:
        - order
      summary: Query status of a order
      operationId: OrderQuery
      requestBody:
        description: Order query
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderQueryRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OrderQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderQueryResponse"
          description: OK
  /v2/refund:
    post:
      tags:
        - refund
      summary: Refund for a transaction
      operationId: OrderRefund
      requestBody:
        description: Refund
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundCreateRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RefundCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundCreateResponse"
          description: OK
  /v2/query_refund:
    post:
      tags:
        - refund
      summary: Query for refund status
      operationId: OrderQueryRefund
      requestBody:
        description: Query refund
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundQueryRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RefundQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundQueryResponse"
          description: OK

  /v2/agreement/bind:
    post:
      tags:
        - tokenization
      summary: Create new binding for the agreement
      operationId: AgreementBind
      requestBody:
        description: Agreement Binding
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementBindRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementBindRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementBindRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementBindResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
  /v2/agreement/unbind:
    post:
      tags:
        - tokenization
      summary: Unbind an agreement
      operationId: AgreementUnbind
      requestBody:
        description: Agreement Unbinding
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementUnbindRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementUnbindRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementUnbindRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementUnbindResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
  /v2/agreement/query:
    post:
      tags:
        - tokenization
      summary: Query for the payment token of a binding
      operationId: AgreementQuery
      requestBody:
        description: Agreement Query
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementQueryRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementQueryRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementQueryRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementQueryResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
  /v2/agreement/balance:
    post:
      tags:
        - tokenization
      summary: Query the balance of a specific user before paying
      operationId: AgreementBalance
      requestBody:
        description: Agreement Balance
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementBalanceRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementBalanceRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementBalanceRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementBalanceResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
  /v2/agreement/pay:
    post:
      tags:
        - tokenization
      summary: Request for agreement pay
      operationId: AgreementPay
      requestBody:
        description: Agreement Pay
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementPayRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementPayRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementPayRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementPayResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
  /v2/agreement/query_user:
    post:
      tags:
        - tokenization
      summary: Query the basic user info
      operationId: AgreementQueryUser
      requestBody:
        description: Agreement Query User Info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementQueryUserRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/AgreementQueryUserRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AgreementQueryUserRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementQueryUserResponse"
          description: OK
        405:
          description: Invalid input
          content: {}
components:
  schemas:
    OrderQueryRequest:
      type: object
      properties:
        app_id:
          type: integer
          description: >-
            The unique ID of the application will be provided after the merchant
            registered successfully with ZaloPay.
        app_trans_id:
          type: string
          description: The transaction ID that is used for querying.
        mac:
          type: string
          description: >-
            It is signature of order. It's calculated by following input:
            hmacinput = appid + `|` + apptransid and use sha256 with app's hmac
            key as sign key
      required:
        - app_id
        - app_trans_id
        - mac
      xml:
        name: OrderQueryRequest
    OrderQueryResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: |-
            Return codes:

            1 - SUCCESS

            2 - FAIL

            3 - PROCESSING

            -500 - SYSTEM_ERROR

            -429 - LIMIT_REQUEST_REACH

            406 - ILLEGAL_STATUS

            -405 - ILLEGAL_CLIENT_REQUEST

            -403 - ILLEGAL_SIGNATURE_REQUEST

            -402 - ILLEGAL_APP_REQUEST

            -401 - ILLEGAL_DATA_REQUEST
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: >-
            Possible codes:


            1 - Giao dịch thành công


            -32 - Hệ thống đang có lỗi, vui lòng quay lại sau.


            -33 - Ứng dụng đang bảo trì, vui lòng quay lại sau.


            -34 - Kênh thanh toán đang bảo trì, vui lòng chọn kênh khác.


            -35 - Kênh thanh toán không hỗ trợ hoặc đang bảo trì, vui lòng chọn
            kênh khác.


            -43 - Ngân hàng đang bảo trì, vui lòng chọn ngân hàng khác.


            -88 - Chức năng này đang bảo trì, vui lòng quay lại sau.


            -101 - Hoàn tiền thành công. Chủ thẻ ATM, Thẻ VISA/Master/JCB sẽ
            được hoàn tiền trong 3-5 ngày làm việc.


            -135 - Hệ thống đang bảo trì, vui lòng quay lại sau.


            -301 - Hệ thống đang có lỗi. Vui lòng thử lại sau.


            -322 - Payment Code hết hạn, giao dịch thất bại, tài khoản chưa bị
            trừ tiền. Vui lòng thực hiện lại.


            -329 - User huỷ giao dịch thanh toán.
        sub_return_message:
          type: string
        is_processing:
          type: boolean
        amount:
          type: integer
          format: int64
        zp_trans_id:
          type: integer
          format: int64
    RefundCreateRequest:
      type: object
      properties:
        app_id:
          type: integer
          description: >-
            The unique ID of the application will be provided after the merchant
            registered successfully with ZaloPay.
        m_refund_id:
          type: string
          description: >-
            Refund ID will be generated by the application. Format:
            yymmdd_appid_xxxxxxxxxx.
        zp_trans_id:
          type: string
          description: ZaloPay transaction ID for refunding.
        amount:
          type: integer
          format: int64
          description: Amount of money for refunding.
        timestamp:
          type: integer
          format: int64
          description: The timestamp that refund order was created at in ms
        description:
          type: string
          description: Reason for refunding.
        mac:
          type: string
          description: >-
            It is signature of order. It's calculated by following input:
            hmacinput = appid + `|` + zptransid + `|` + amount + `|` +
            description + `|` + timestamp and use sha256 with app's hmac key as
            sign key
      required:
        - app_id
        - m_refund_id
        - zp_trans_id
        - amount
        - timestamp
        - description
        - mac
      xml:
        name: RefundCreateRequest
    RefundCreateResponse:
      type: object
      properties:
        return_code:
          type: integer
        return_message:
          type: string
        sub_return_code:
          type: integer
        sub_return_message:
          type: string
        refund_id:
          type: integer
          format: int64
    RefundQueryRequest:
      type: object
      properties:
        app_id:
          type: integer
          description: >-
            The unique ID of the application will be provided after the merchant
            registered successfully with ZaloPay.
        m_refund_id:
          type: string
          description: Refund ID that is used for requesting refund.
        timestamp:
          type: integer
          format: int64
          description: Timestamp of request in ms.
        mac:
          type: string
          description: >-
            It is signature of order. It's calculated by following input:
            hmacinput = appid + `|` + mrefundid + `|` + timestamp and use sha256
            with app's hmac key as sign key
      required:
        - app_id
        - m_refund_id
        - timestamp
        - mac
      xml:
        name: QueryRefundRequest
    RefundQueryResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: |-
            Return codes:

            1 - SUCCESS

            2 - FAIL

            3 - PROCESSING

            -500 - SYSTEM_ERROR

            -429 - LIMIT_REQUEST_REACH

            406 - ILLEGAL_STATUS

            -405 - ILLEGAL_CLIENT_REQUEST

            -403 - ILLEGAL_SIGNATURE_REQUEST

            -402 - ILLEGAL_APP_REQUEST

            -401 - ILLEGAL_DATA_REQUEST
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: >-
            Possible codes:


            1 - Giao dịch thành công


            -32 - Hệ thống đang có lỗi, vui lòng quay lại sau.


            -33 - Ứng dụng đang bảo trì, vui lòng quay lại sau.


            -34 - Kênh thanh toán đang bảo trì, vui lòng chọn kênh khác.


            -35 - Kênh thanh toán không hỗ trợ hoặc đang bảo trì, vui lòng chọn
            kênh khác.


            -43 - Ngân hàng đang bảo trì, vui lòng chọn ngân hàng khác.


            -88 - Chức năng này đang bảo trì, vui lòng quay lại sau.


            -101 - Hoàn tiền thành công. Chủ thẻ ATM, Thẻ VISA/Master/JCB sẽ
            được hoàn tiền trong 3-5 ngày làm việc.


            -135 - Hệ thống đang bảo trì, vui lòng quay lại sau.


            -301 - Hệ thống đang có lỗi. Vui lòng thử lại sau.


            -322 - Payment Code hết hạn, giao dịch thất bại, tài khoản chưa bị
            trừ tiền. Vui lòng thực hiện lại.


            -329 - User huỷ giao dịch thanh toán.
        sub_return_message:
          type: string
    OrderCreateRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int32
          description: >-
            The unique ID of the application will be provided after the merchant
            registered successfully with ZaloPay.
        app_user:
          type: string
          description: The merchant ID.
        app_trans_id:
          type: string
          description: >-
            Unique transaction ID of application, format: yyMMddxxxxxxxxx. Max
            length is 40. For example: 180208181007242
        app_time:
          type: integer
          format: int64
          description: >-
            The timestamp that order was created at in ms. The different limit
            is 15 mitnutes.
        amount:
          type: integer
          format: int64
          description: Amount of money will be charged.
        title:
          type: string
          description: Optional title of order.
        description:
          type: string
          description: >-
            Users will see this text when they are in the confirm payment
            screen.
        callback_url:
          type: string
          description: >-
            ZaloPay will use this URL to notify when the payment success.
            If not provided, the default app callback URL will be used.
        redirect_url:
          type: string
          description: >-
            This URL is used for transactions on the payment gateway when a
            transaction completed; the user will be redirected to this URL. It's
            the responsibility of merchants to provide the correct link.
        device_info:
          type: string
          description: JSON string describes the device specification.
        item:
          type: string
          description: JSON string describes order items.
        embed_data:
          type: string
          description: JSON string include special information of order.
        mac:
          type: string
          description: >-
            It is signature of order. It's calculated by following input:
            hmac_input = app_id + `|` + app_trans_id + `|` + app_user + `|` + amount
            + `|` + app_time + `|` + embe_data + `|` + item and use SHA256 with
            app's hmac key as sign key.
        product_code:
          type: string
          enum:
            - AGREEMENT
          description: If the order is for Agreement, this field must be AGREEMENT.
        bank_code:
          type: string
        phone:
          type: string
          description: User phone
        email:
          type: string
          description: User email
        address:
          type: string
          description: User address
      required:
        - app_id
        - app_user
        - app_trans_id
        - app_time
        - amount
        - description
        - item
        - embed_data
        - mac
      xml:
        name: OrderCreateRequest
    OrderCreateResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: |-
            Return codes:

            1 - SUCCESS

            2 - FAIL
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: |-
            The detailed reason explains why the operation has failed. Possible codes are:

            -33 - APP_MAINTENANCE - The app is in maintenance

            -68 - ALREADY_EXISTS - The order is already exists

            -401 - INVALID_ARGUMENT - The request is invalid

            -402 - UNAUTHENTICATED - The app is unauthenticated

            -500 - SYSTEM_ERROR - The system is error
        sub_return_message:
          type: string
        zp_trans_token:
          type: string
        order_url:
          type: string

    ### AGREEMENT PAY ###
    AgreementBindRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        app_trans_id:
          type: string
          description: "Unique transaction ID of application, format: yyMMddxxxxxxxxx. Max length is 40. For example: 180208181007242"
        req_date:
          type: integer
          format: int64
          description: "The timestamp that order was created at in ms. The different limit is 15 minutes."
        max_amount:
          type: integer
          format: int64
          description: "Maximum permissible amount. The default is real balance."
        redirect_url:
          type: string
          description: >-
            "URL of merchant binding page(web), be used
            in the desktop binding scenario. After the binding
            process finished, ZaloPay auto-debit binding page will
            redirect to merchant binding page via redirect URL with
            the binding result."
        redirect_deep_link:
          type: string
          description: >-
            "The deep-link of merchant app, be used in the mobile binding
             scenario. After the binding process finished, ZaloPay app
             will open the merchant app via redirect deep link with the
             binding result."
        binding_data:
          type: string
          description: "JSON string contain binding information, describe which information user will agree to allow merchant to do, using confirmation binding."
        binding_type:
          type: string
          enum:
            - WALLET
          description: "This field specify which type of binding, currently only WALLET is allowed. Default is WALLET if not provided"
        callback_url:
          type: string
          description: "TBD"
        identifier:
          type: string
          description: "User's identifier on merchant system, it can be merchant user's id, phone number, email..."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + apps_trans_id + `|` + binding_data + `|` + binding_type + `|` + identifier + `|` + max_amount + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - app_trans_id
        - req_date
        - identifier
        - mac
      xml:
        name: AgreementBindRequest
    AgreementBindResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "Return codes:\n\n1 - SUCCESS\n\n2 - FAIL\n\n3 - PROCESSING\n\n-500 - SYSTEM_ERROR\n\n-429 - LIMIT_REQUEST_REACH\n\n406 - ILLEGAL_STATUS\n\n-405 - ILLEGAL_CLIENT_REQUEST\n\n-403 - ILLEGAL_SIGNATURE_REQUEST\n\n-402 - ILLEGAL_APP_REQUEST\n\n-401 - ILLEGAL_DATA_REQUEST"
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: ""
        sub_return_message:
          type: string
        binding_id:
          type: string
        binding_url:
          type: string
    AgreementUnbindRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        identifier:
          type: string
          description: "The user's identifier on the merchant system, it can be a merchant user's id, phone number, email..."
        binding_id:
          type: string
          description: "The ID of binding that the user wants to unbind."
        req_date:
          type: integer
          format: int64
          description: "The timestamp that order was created at in ms. The different limit is 15 minutes."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + identifier + `|` + binding_id + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - identifier
        - binding_id
        - req_date
        - mac
      xml:
        name: AgreementUnbindRequest
    AgreementUnbindResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "Return codes: 1: Success, 2: Failed"
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: ""
        sub_return_message:
          type: string
    AgreementQueryRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        app_trans_id:
          type: string
          description: "Unique transaction ID of application, format: yyMMddxxxxxxxxx. Max length is 40. For example: 180208181007242"
        req_date:
          type: integer
          format: int64
          description: "Current timestamp in milliseconds."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + apps_trans_id + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - app_trans_id
        - req_date
        - mac
      xml:
        name: AgreementQueryRequest
    AgreementQueryResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "Return codes:\n\n1 - SUCCESS\n\n2 - FAILED\n\n3 - PENDING"
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: ""
        sub_return_message:
          type: string
        data:
          type: object
          properties:
            app_id:
              type: integer
              format: int64
              description: "The app id of the merchant."
            app_trans_id:
              type: string
              description: "The merchant's unique id for the binding."
            binding_id:
              type: string
              description: "The id of binding has been confirmed in the ZaloPay system."
            pay_token:
              type: string
              description: "The public token is used when doing auto-debit."
            server_time:
              type: integer
              format: int64
              description: "Server timestamp in seconds."
            merchant_user_id:
              type: string
              description: "The identifier field in bind request."
            status:
              type: integer
              description: "1: Confirmed, 3: Cancelled, 4: Disabled"
            msg_type:
              type: integer
              description: >-
                Type of message:
                  1: The user confirms an agreement
                  2: The user updates the agreement
            zp_user_id:
              type: string
              description: "The identifier of ZaloPay user per merchant app_id."
            masked_user_phone:
              type: string
              description: 'Masked user phone (Ex: masked_user_phone: "****6938")'
    AgreementBalanceRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        identifier:
          type: string
          description: "The user's identifier on the merchant system,it can be a merchant user's id, phone, number, email..."
        pay_token:
          type: string
          description: "The public token of the payer."
        req_date:
          type: integer
          format: int64
          description: "Current timestamp in milliseconds."
        amount:
          type: integer
          format: int64
          description: "Payment amount."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + pay_token + `|` + identifier + `|` + amount + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - identifier
        - pay_token
        - req_date
        - amount
        - mac
      xml:
        name: AgreementBalanceRequest
    AgreementBalanceResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "Return codes: 1: Success, otherwise fail"
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: ""
        sub_return_message:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              channel:
                type: integer
                format: int64
                description: "Payment channel."
              payable:
                type: boolean
                description: "If the user can pay on this channel."
              bank_code:
                type: string
                description: "Bank code of the channel."
        discount_amount:
          type: integer
          description: >-
            "The discount amount of the best user's voucher for merchant's order
            If discount_amount == 0 that means user has no voucher can apply for current order."
    AgreementQueryUserRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        access_token:
          type: string
          description: "The access token of the user after binding success.(This is pay_token value)"
        req_date:
          type: integer
          format: int64
          description: "Current timestamp in milliseconds."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + access_token + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - identifier
        - pay_token
        - req_date
        - amount
        - mac
      xml:
        name: AgreementQueryUserRequest
    AgreementQueryUserResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "Return codes: 1: Success, 2: Failed, 3: Processing"
        return_message:
          type: string
        sub_return_code:
          type: integer
          description: ""
        sub_return_message:
          type: string
        phone:
          type: string
          description: >-
            "Masked phone of user. For example: ****1234."
    AgreementPayRequest:
      type: object
      properties:
        app_id:
          type: integer
          format: int64
          description: "The unique ID of the application will be provided after the merchant registered successfully with ZaloPay."
        identifier:
          type: string
          description: "user's identifier on the merchant system, it can be a merchant user's id, phone number, email..."
        zp_trans_token:
          type: string
          description: "The token is generated by API create_order."
        pay_token:
          type: string
          description: "The public token of the payer."
        req_date:
          type: integer
          format: int64
          description: "Current timestamp in milliseconds."
        mac:
          type: string
          description: "It is signature of request. It's calculated by following input: hmacinput = app_id + `|` + identifier + `|` + zp_trans_token + `|` + pay_token + `|` + req_date; and use sha256 with app's hmac key as sign key."
      required:
        - app_id
        - identifier
        - zp_trans_token
        - pay_token
        - req_date
        - mac
      xml:
        name: AgreementPayRequest
    AgreementPayResponse:
      type: object
      properties:
        return_code:
          type: integer
          description: "1: Success, 2: Failed, 3: Processing"
        return_message:
          type: string
          description: "Description of return code"
        sub_return_code:
          type: integer
          description: "Detail error code"
        sub_return_message:
          type: string
          description: "Detail error message"
        app_trans_id:
          type: string
          description: "TXID of order transaction"
        zp_trans_id:
          type: integer
          description: "The ZaloPay's transaction code"
